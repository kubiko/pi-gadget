name: pi
version: 20-1
summary: Raspberry Pi gadget
description: |
  Support files for booting Raspberry Pi.
  This gadget snap supports the Raspberry Pi 2B, 3B, 3A+, 3B+, 4B, Compute
  Module 3, and the Compute Module 3+ universally.
type: gadget
base: core20
assumes: [kernel-assets]
architectures:
  - build-on: [amd64, arm64]
    run-on: arm64

confinement: strict
grade: stable
parts:
  add-ppa:
    plugin: nil
    build-packages:
      - software-properties-common
    override-pull: |
      sudo add-apt-repository --yes ppa:snappy-dev/image
      sudo apt update
  gadget:
    after: [add-ppa]
    plugin: nil
    source: .
    override-build: |
      set -x
      # unconditionally set the arch-triplet since this snapcraft.yaml will 
      # always be used to produce an armhf snap
      BUILD_ARCH_TRIPLET=aarch64-linux-gnu

      OPTIONAL_ARGS="SOURCES_HOST=\"./helpers/cross-sources.list\" SOURCES_D_HOST=\"./helpers\""
      make -C $SNAPCRAFT_PART_SRC core \
        DESTDIR=${SNAPCRAFT_PART_INSTALL} \
        ARCH="$(dpkg-architecture -t $BUILD_ARCH_TRIPLET -q DEB_HOST_ARCH)" \
        ${OPTIONAL_ARGS:-}
      sed -i \
          -e '/setenv kernel_bootpart/a setenv psplash_file "psplash.img"\nsetenv psplash_part "1"' \
          -e 's/setenv ramdisk_param "${.*/setenv ramdisk_size "${filesize}"\n      setenv ramdisk_param "${ramdisk_addr_r}:${ramdisk_size}"/g' \
          -e '/for cmd in ${try_boot}; do/i \    if test -e ${devtype} ${devnum}:${psplash_part} ${psplash_file}; then setexpr psplash_addr ${ramdisk_addr_r} + 0x${ramdisk_size}; load ${devtype} ${devnum}:${psplash_part} ${psplash_addr} ${psplash_file}; setenv psplash_size "${filesize}"; setexpr ramdisk_size 0x${ramdisk_size} + 0x${psplash_size}; setenv ramdisk_param "${ramdisk_addr_r}:${ramdisk_size}"; fi' \
          stage/bootscr.rpi
      mkimage -A arm64 -O linux -T script -C none -n "boot script" \
              -d stage/bootscr.rpi ${SNAPCRAFT_PART_INSTALL}/boot-assets/boot.scr
    prime:
      - boot-assets/*
      - uboot.conf
      - boot.sel
    build-packages:
      - u-boot-tools
      - lsb-release
      - dpkg-dev
      - make
  psplash-local:
    after: [add-ppa]
    plugin: dump
    prime: [-*]
    source: .
    stage: [psplash]
  psplash:
    after: [psplash-local]
    source: git://git.yoctoproject.org/psplash
    source-commit: 0a902f7cd875ccf018456451be369f05fa55f962
    plugin: autotools
    autotools-configure-parameters:
      - --build=${SNAPCRAFT_ARCH_TRIPLET}
      - --host=${SNAPCRAFT_ARCH_TRIPLET}
      - --prefix=/usr
      - --with-systemd
      - --with-font=ubuntu
      - CC=${SNAPCRAFT_ARCH_TRIPLET}-gcc
      - LIBS="-lsystemd"
    override-pull: |
      snapcraftctl pull
      sed -i 's/POKY_IMG/CORE_IMG/g' psplash.c
      otf2bdf -p 22 -r 75 -v \
        $(ls /usr/share/fonts/truetype/*/Ubuntu-R.ttf) \
        -o ubuntu.bdf || res=$?
      if [ "$res" != "8" ]; then
        echo "Unexpected exit code from otf2bdf, should be 8"
        exit 1
      fi
      bdftobogl ubuntu.bdf > ubuntu-font.h
      sed -i \
          -e 's/#include "bogl\.h"/#include "psplash\.h"/g' \
          -e 's/struct bogl_font font_ubuntu/PSplashFont ubuntu_font/g' \
          ubuntu-font.h
    override-build: |
      set -x
      # convert image asset
      ln -sf ${SNAPCRAFT_STAGE}/psplash/core_orange_hex.png psplash-core.png
      ./make-image-header.sh psplash-core.png CORE
      sed -i \
          -e 's/psplash-poky-img.h/psplash-core-img.h/g' \
          Makefile.am psplash.c
      git apply ${SNAPCRAFT_STAGE}/psplash/psplash.patch
      snapcraftctl build

      cp -r ${SNAPCRAFT_STAGE}/psplash/initrd/* ${SNAPCRAFT_PART_INSTALL}
      cd ${SNAPCRAFT_PART_INSTALL} && find . | cpio --quiet -o -H newc | lz4 -9 -l >> \
        "${SNAPCRAFT_PART_BUILD}/psplash.img"
      cd ${SNAPCRAFT_PART_BUILD}
      mkdir -p ${SNAPCRAFT_PART_INSTALL}/boot-assets
      cp psplash.img ${SNAPCRAFT_PART_INSTALL}/boot-assets/
    stage:
      - boot-assets/psplash.img
    build-packages:
      - libgdk-pixbuf2.0-dev
      - automake
      - autoconf
      - gcc
      - otf2bdf
      - libbogl-dev
      - ttf-ubuntu-font-family
      - cpio
      - findutils
      - liblz4-tool
      - libc-dev
      - libsystemd-dev
      - try:
          - gcc-aarch64-linux-gnu:amd64
          - libc6-dev-arm64-cross:amd64

slots:
  bcm-gpio-0:
    interface: gpio
    number: 0
  bcm-gpio-1:
    interface: gpio
    number: 1
  bcm-gpio-2:
    interface: gpio
    number: 2
  bcm-gpio-3:
    interface: gpio
    number: 3
  bcm-gpio-4:
    interface: gpio
    number: 4
  bcm-gpio-5:
    interface: gpio
    number: 5
  bcm-gpio-6:
    interface: gpio
    number: 6
  bcm-gpio-7:
    interface: gpio
    number: 7
  bcm-gpio-8:
    interface: gpio
    number: 8
  bcm-gpio-9:
    interface: gpio
    number: 9
  bcm-gpio-10:
    interface: gpio
    number: 10
  bcm-gpio-11:
    interface: gpio
    number: 11
  bcm-gpio-12:
    interface: gpio
    number: 12
  bcm-gpio-13:
    interface: gpio
    number: 13
  bcm-gpio-14:
    interface: gpio
    number: 14
  bcm-gpio-15:
    interface: gpio
    number: 15
  bcm-gpio-16:
    interface: gpio
    number: 16
  bcm-gpio-17:
    interface: gpio
    number: 17
  bcm-gpio-18:
    interface: gpio
    number: 18
  bcm-gpio-19:
    interface: gpio
    number: 19
  bcm-gpio-20:
    interface: gpio
    number: 20
  bcm-gpio-21:
    interface: gpio
    number: 21
  bcm-gpio-22:
    interface: gpio
    number: 22
  bcm-gpio-23:
    interface: gpio
    number: 23
  bcm-gpio-24:
    interface: gpio
    number: 24
  bcm-gpio-25:
    interface: gpio
    number: 25
  bcm-gpio-26:
    interface: gpio
    number: 26
  bcm-gpio-27:
    interface: gpio
    number: 27
  i2c-0:
    interface: i2c
    path: /dev/i2c-0
  i2c-1:
    interface: i2c
    path: /dev/i2c-1
  i2c-2:
    interface: i2c
    path: /dev/i2c-2
  bt-serial:
    interface: serial-port
    path: /dev/ttyAMA0
  spidev0:
    interface: spi
    path: /dev/spidev0.0
  spidev1:
    interface: spi
    path: /dev/spidev0.1
